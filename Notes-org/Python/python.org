* 基础知识
** 数字和表达式
*** 交互式Python解释器可以当作非常强大的计算器使用
*** Python提供了一个用于实现整除的操作符:双斜线(//)
*** 幂(乘方)运算符:**
*** 长整型数书写方法和普通整数一样,但是结尾有个L(理论上,用小些的l也可以,但是它看起来太像数字1,所以建议不要用小写l)
*** 虚数均以j(或者J)结尾
** 变量
*** 在使用变量之前,需要对其赋值
*** 变量名可以包括字母,数字和下划线(_),变量不能以数字开头
** 语句
*** 在Python3.0中,print是函数,即需要使用print()
** 获取用户输入
*** input()
*** input函数返回输入的内容
** 函数
*** pow():乘方
*** abs():绝对值
*** round():把符点数四舍五入为最接近的整数值
** 模块
*** 用import导入模块,然后按照"模块.函数"的格式使用这个模块的函数
*** 使用"from模块import函数"这种形式的import命令之后,就可以直接使用函数,而不需要使用模块名作为前缀
*** 还可以使用变量来引用函数(或者Python之中的大多数的对象)
** 注释
*** 在Python中井号(#)右侧的一切都会被忽略
** 字符串
*** 单引号字符串和转义引号
**** 对于输入时使用的双引号和程序打印出的单引号,二者没有区别
**** 若字符串中包含单引号则应使用双引号将整个字符串括起来,反之亦然
**** 转义:使用反斜线(\)对字符串中的引号进行转义
*** 拼接字符串
**** 自动拼接:两个自符串相邻,Python会自动拼接它们
**** 一般方法:使用加号(+)
*** 字符串表示
**** str():它会把值转换为合理形式的字符串
**** repr():它会创建一个字符串,以合法的Python表达式的形式来表示值;repr(x)的功能也可以用`x`实现(注意,`是反引号,而不是单引号(但在Python3.0中已经不再使用反引号了))
*** input和raw_input的比较

